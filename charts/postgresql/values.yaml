## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local

## @section Global parameters
## Please, note that this will override the parameters, including dependencies, configured to use the global value
##
global:
  ## @param global.imageRegistry Global Docker image registry
  ##
  imageRegistry: ""
  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  ## e.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  ## @param global.storageClass Global StorageClass for Persistent Volume(s)
  ##
  storageClass: ""

## @param replicaCount Number of PostgreSQL replicas
##
replicaCount: 1

affinity:
  ## @param affinity.podAntiAffinityType Allowed values are: "preferred" or "required".
  ## ref: https://cloudnative-pg.io/documentation/1.16/api_reference/#AffinityConfiguration
  ##
  podAntiAffinityType: required

# https://cloudnative-pg.io/documentation/current/backup_recovery/
## @param backup.enabled Enable backup
## @param backup.endpointURL Endpoint to be used to upload data to the cloud
## @param backup.endpointCASecret Secret containing ca for the endpoint
## @param backup.s3.enabled Use s3 for backup storage
## @param backup.s3.bucketName Name of the bucket
## @param backup.s3.existingSecret Name of the secret containing the credentials
## @param backup.s3.objectBucketClaim.enabled Create the bucket from an ObjectBucketClaim
## @param backup.s3.objectBucketClaim.storageClassName StorageClass for the ObjectBucketClaim
## @param backup.scheduled.enabled Enabled creation of a scheduled backup
## @param backup.scheduled.schedule Schedule of the scheduled backup
## @param backup.retentionPolicy Retention for backups
backup:
  enabled: false
  endpointURL: ""
  endpointCASecret: ""
  s3:
    enabled: true
    bucketName: ""
    # ServiceAccount {{ template "common.names.fullname" . }} must be allowed to read this secret
    # see templates/backup/role.yaml for example
    existingSecret: ""
    objectBucketClaim:
      enabled: false
      storageClassName: ""
  scheduled:
    enabled: false
    schedule: 0 0 0 * * *
  retentionPolicy: 7d

## PostgreSQL persistence configuration
##
persistence:
  ## @param persistence.storageClass PVC Storage Class for PostgreSQL Primary data volume
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  ## @param persistence.size PVC Storage Request for PostgreSQL volume
  ##
  size: 8Gi

## @param networkPolicy.enabled Enable network policies
## @param networkPolicy.apiServerPeer networkPolicyPeer of the apiserver
## @param networkPolicy.cnpgPeer networkPolicyPeer of the operator
## @param networkPolicy.objectStoragePeer networkPolicyPeer of the object storage (see backup)
## @param networkPolicy.scrapePeer networkPolicyPeer of the metrics scrape
## @param networkPolicy.egressRules additional egress rules
## @param networkPolicy.ingressRules additional ingress rules
networkPolicy:
  enabled: false
  apiServerPeer: {}
  cnpgPeer: {}
  objectStoragePeer: {}
  scrapePeer: {}
  egressRules: []
  ingressRules: []

## @param certificates.mode manage certificates by the operator or cert-manager
## @param certificates.issuerRef cert-manager issuer for certificates. selfSigned issuer is created if empty
certificates:
  # operator-manager | cert-manager
  mode: operator-manager

  # if not defined, a selfSigned issuer will be created
  issuerRef: {}

## @section Metrics Parameters
##
metrics:
  ## @param metrics.enabled Start a prometheus exporter
  ##
  enabled: false
  ## Prometheus Operator PodMonitor configuration
  ##
  podMonitor:
    ## @param metrics.podMonitor.enabled Create PodMonitor Resource for scraping metrics using Prometheus Operator
    ##
    enabled: false
