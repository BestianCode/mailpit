{{- if .Values.networkPolicy.enabled }}
apiVersion: {{ include "common.capabilities.networkPolicy.apiVersion" . }}
kind: NetworkPolicy
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- with .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 4 }}
    {{- end }}
  {{- with .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  podSelector:
    matchLabels:
      cnpg.io/cluster: {{ template "common.names.fullname" . }}
  ingress:
    - from:
        - podSelector:
            matchLabels:
              cnpg.io/cluster: {{ template "common.names.fullname" . }}
      ports:
        - protocol: TCP
          port: postgresql
    {{- if and .Values.metrics.enabled .Values.metrics.podMonitor.enabled }}
    - from:
        {{- with .Values.networkPolicy.metrics.peer }}
        - {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 10 }}
        {{- else }}
        - namespaceSelector: {}
        {{- end }}
      ports:
        - protocol: TCP
          port: metrics
    {{- end }}
    - from:
        {{- with .Values.networkPolicy.cnpg.peer }}
        - {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 10 }}
        {{- else }}
        - namespaceSelector:
            kubernetes.io/metadata.name: cnpg-system
          podSelector:
            app.kubernetes.io/name: cloudnative-pg
        {{- end }}
      ports:
        - protocol: TCP
          port: status
    {{- with .Values.networkPolicy.ingressRules }}
    {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 4 }}
    {{- end }}
  egress:
    - to:
        - podSelector:
            matchLabels:
              cnpg.io/cluster: {{ template "common.names.fullname" . }}
      ports:
        - protocol: TCP
          port: postgresql
    - {{- with .Values.networkPolicy.apiserver.peer }}
      to:
        - {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 10 }}
      {{- end }}
      ports:
        - protocol: TCP
          port: {{ .Values.networkPolicy.apiserver.port }}
    - to:
        {{- with .Values.networkPolicy.cnpg.peer }}
        - {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 10 }}
        {{- else }}
        - namespaceSelector:
            kubernetes.io/metadata.name: cnpg-system
          podSelector:
            app.kubernetes.io/name: cloudnative-pg
        {{- end }}
      ports:
        - protocol: TCP
          port: webhook-server
    {{- if .Values.backup.enabled }}
    - {{- with .Values.networkPolicy.backup.peer }}
      to:
        - {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 10 }}
      {{- end }}
      ports:
        - protocol: TCP
          {{- $url := urlParse .Values.backup.endpointURL }}
          {{- $port := 0 }}
          {{- if contains ":" $url.host }}
          {{- $port = splitList ":" $url.host | last }}
          {{- else }}
          {{- $port = eq $url.scheme "https" | ternary 443 80 }}
          {{- end }}
          port: {{ $port }}
    {{- end }}
    {{- with .Values.networkPolicy.egressRules }}
    {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 4 }}
    {{- end }}
  policyTypes:
    - Ingress
    - Egress
{{- end }}
