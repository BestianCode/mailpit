{{- if eq .Values.architecture "standalone" }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: webhook
    {{- with .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 4 }}
    {{- end }}
  {{- with .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: webhook
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: webhook
        {{- with .Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
    spec:
      containers:
        - name: manager
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          args:
            - --namespace={{ include "common.names.namespace" . }}
            - --webhook-server-port=9443
            - --enable-stackdriver=false
            - --max-reconciles=10
            - --apiserver-qps-throttle=50
            - --excluded-namespace={{ include "common.names.namespace" . }}
            - --excluded-namespace=default
            - --excluded-namespace=kube-node-lease
            - --excluded-namespace=kube-public
            - --excluded-namespace=kube-system
            {{- if .Values.hrq.enabled }}
            - --enable-hrq
            {{- end }}
          command:
            - /manager
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /healthz
              port: 8081
            periodSeconds: 10
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          - containerPort: 8080
            name: metrics
            protocol: TCP
          - containerPort: 8081
            name: healthz
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            periodSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 100
            httpGet:
              path: /readyz
              port: 8081
            periodSeconds: 5
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        securityContext:
          fsGroup: 2000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 10
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ template "common.names.fullname" . }}-webhook-server-cert
{{- end }}
